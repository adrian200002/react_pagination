{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","pageNum","className","classNames","disabled","href","onClick","pages","i","page","push","generatePages","map","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setPerPage","perPageNum","length","startIndex","lastIndex","min","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAAa,SAAC,GAEb,IADZC,EACW,EADXA,MAAOC,EACI,EADJA,QAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,aAEvBC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAmB,SAACC,GACxBL,EAAaK,IA6Bf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBT,IADZ,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EAAoB,OAAS,QAC5CW,QAAS,kBAAMN,EAAiBL,GAAe,IALjD,oBAhCgB,WAGpB,IAFA,IAAMY,EAAQ,GADY,WAGjBC,GACP,IAAMC,EACJ,oBAEEP,UAAWM,IAAMb,EAAc,mBAAqB,YAFtD,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMN,EAAiBQ,IAJlC,SAMGA,KATEA,GAcTD,EAAMG,KAAKD,IAjBJD,EAAI,EAAGA,GAAKX,EAAYW,GAAK,EAAI,EAAjCA,GAoBT,OAAOD,EAmBJI,GAAgBC,KAAI,SAAAH,GAAI,OAAIA,KAC7B,oBAAIP,UAAWC,IAAW,YAAa,CACrCC,SAAUT,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAAa,OAAS,QACrDS,QAAS,kBAAMN,EAAiBL,EAAc,IALhD,wBC3DFkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQN,KAAKO,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBN,KAAI,SAAAK,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB0B,EAApB,KACA,EAA8BD,mBAAS,KAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KAEMC,GAAc7B,EAEdG,EAAaC,KAAKC,KAAKc,EAAMW,OAASD,GActCE,EAAa9B,EAAc4B,EAAaA,EACxCG,EAAY5B,KAAK6B,IAAIF,EAAaF,EAAYV,EAAMW,QAEpDI,EAAef,EAAMgB,MAAMJ,EAAYC,GAE7C,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC8B,EAAa,EAD9C,cACqDC,EADrD,eACqEb,EAAMW,OAD3E,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAOrC,EACPsC,SA1BkB,SAACC,GAC3BX,EAAWW,EAAMC,OAAOH,OAExBV,EAAe,IAkBT,UAOE,wBAAQU,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACET,MAAOoB,EAAMW,OACb9B,SAAUA,EACVC,aAAcA,EACdC,aAnDmB,SAACa,GACpBA,IAASd,GAAec,GAAQ,GAAKA,GAAQZ,GAC/CwB,EAAeZ,MAmDf,6BACGmB,EAAahB,KAAI,SAACwB,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YErEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.86dc3377.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number;\n  onPageChange: (pageNum: number) => void;\n};\n\nexport const Pagination = ({\n  total, perPage, currentPage, onPageChange,\n}: Props) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (pageNum: number) => {\n    onPageChange(pageNum);\n  };\n\n  const generatePages = () => {\n    const pages = [];\n\n    for (let i = 1; i <= totalPages; i += 1) {\n      const page = (\n        <li\n          key={i}\n          className={i === currentPage ? 'page-item active' : 'page-item'}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${i}`}\n            onClick={() => handlePageChange(i)}\n          >\n            {i}\n          </a>\n        </li>\n      );\n\n      pages.push(page);\n    }\n\n    return pages;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={() => handlePageChange(currentPage + -1)}\n        >\n          «\n        </a>\n      </li>\n      {generatePages().map(page => page)}\n      <li className={classNames('page-item', {\n        disabled: currentPage === totalPages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState('5');\n\n  const perPageNum = +perPage;\n\n  const totalPages = Math.ceil(items.length / perPageNum);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage && page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(event.target.value);\n\n    setCurrentPage(1);\n  };\n\n  const startIndex = currentPage * perPageNum - perPageNum;\n  const lastIndex = Math.min(startIndex + perPageNum, items.length);\n\n  const visibleItems = items.slice(startIndex, lastIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${lastIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={+perPage}\n        currentPage={+currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {visibleItems.map((item) => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}